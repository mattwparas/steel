[package]
name = "steel-core"
# version = "0.4.0"
version.workspace = true
authors = ["mattwparas <matthewparas2020@u.northwestern.edu>"]
edition = "2021"
license = "MIT OR Apache-2.0"
repository = "https://github.com/mattwparas/steel"
description = "Core compiler and VM implementation for steel"


[lib]
name = "steel"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
im-rc = { version = "15.1.0", features = ["serde"], optional = true }
codespan-reporting = { version = "0.11.1", optional = true }
log = { version = "0.4.17", default-features = false }

futures-executor = { version = "0.3.28", optional = true }
futures-util = { version = "0.3.28", optional = true }
futures-task = { version = "0.3.28", optional = true }

serde_json = { version = "1.0.108", optional = true }
serde = { version = "1.0.193", default-features = false, features = ["alloc", "derive"] }
bincode = { version = "1.3.3", optional = true }
im-lists = { version = "0.11.0", optional = true }

strsim = { version = "0.11.0", optional = true }
quickscope = { version = "0.2.0", optional = true }

lasso = { version = "0.7.3", default-features = false, optional = true, features = ["ahash"] }

once_cell = { version = "1.18.0", default-features = false }
fxhash = { version = "0.2.1", optional = true }
steel-gen = { path = "../steel-gen", version = "0.3.0", default-features = false }
steel-parser = { path = "../steel-parser", version = "0.7.0", default-features = false, optional = true }
steel-derive = { path = "../steel-derive", version = "0.6.0" }
cargo-steel-lib = { path = "../cargo-steel-lib", version = "0.2.0", optional = true }
hashbrown = { version = "0.14", default-features = false, features = ["serde"] }
chrono = { version = "0.4.23", default-features = false, features = ["std", "clock"], optional = true }
# TODO: Consider whether rand needs to be here
rand = { version = "0.9.0", optional = true }
num-bigint = { version = "0.4.6", default-features = false, features = ["serde"], optional = true }
num-rational = { version = "0.4.2", default-features = false, optional = true }
num-traits = { version = "0.2.19", default-features = false, features = ["libm"], optional = true }
num-integer = { version = "0.1.46", default-features = false, optional = true }

# For structs
smallvec = { version = "1.13.0", default-features = false, features = ["union", "serde"], optional = true }

# Pretty printing documentation
termimad = { version = "0.31.1", optional = true }

triomphe = { version = "0.1.14", optional = true }

# FFI for dylibs
abi_stable = { version = "0.11.2", optional = true }
async-ffi = { version = "0.5.0", features = ["abi_stable"], optional = true }
# Cranelift JIT
cranelift = { version = "0.84.0", optional = true }
cranelift-module = { version = "0.84.0", optional = true }
cranelift-jit = { version = "0.84.0", optional = true }

anyhow = { version = "1", optional = true }

stacker = { version = "0.1.15", optional = true }

# Sync feature
im = { version = "15.1.0", features = ["serde"], optional = true }

parking_lot = { version = "0.12", features = ["arc_lock", "send_guard"], optional = true }

bigdecimal = { version = "0.4.5", optional = true }

# Also for sync stuff
crossbeam-channel = { version = "0.5.15", optional = true }
crossbeam-utils = { version = "0.8.21", optional = true }
crossbeam-queue = { version = "0.3.12", optional = true }

httparse = { version = "1.9.4", optional = true }

compact_str = { version = "0.8.0", features = ["serde"], optional = true }

git2 = { version = "0.20.2", optional = true, features = ["vendored-openssl"] }
ureq = { version = "3.0.12", optional = true }

# For the constant map

md-5 = { version = "0.10.6", optional = true }
glob = { version = "0.3.2", optional = true }

# For helping discover the steel home location
env_home = { version = "0.1.0", optional = true }
weak-table = { version = "0.3.2", optional = true }
arc-swap = { version = "1.7.1", optional = true }
xdg = { version = "3.0.0", optional = true }

shared_vector = { version = "0.4.4", optional = true }
polling = { version = "3.10.0", optional = true }
which = { version = "8.0.0", optional = true }

imbl = { version = "6", optional = true, features = ["triomphe", "serde"] }
icu_casemap = { version = "2.0.0", optional = true }
getrandom = { version = "0.3.1", optional = true, default-features = false }

[target.'cfg(any(target_os = "linux", target_os = "macos", target_os = "windows"))'.dev-dependencies]
proptest = "1.1.0"
criterion = "0.5.1"

[build-dependencies]
steel-gen = { path = "../steel-gen", version = "0.3.0", default-features = false, features = ["codegen"] }

[features]
# TODO: Deprecate the modules feature flag, it no longer does anything
default = ["std", "modules"]
std = [
    "dep:fxhash",
    "dep:im-rc",
    "dep:codespan-reporting",
    "dep:futures-executor",
    "dep:futures-util",
    "dep:futures-task",
    "dep:serde_json",
    "dep:bincode",
    "dep:im-lists",
    "dep:strsim",
    "dep:quickscope",
    "dep:lasso",
    "dep:steel-parser",
    "steel-parser/std",
    "dep:chrono",
    "dep:env_home",
    "dep:weak-table",
    "dep:rand",
    "dep:num-bigint",
    "dep:num-rational",
    "dep:num-traits",
    "dep:num-integer",
    "dep:smallvec",
    "dep:parking_lot",
    "dep:bigdecimal",
    "dep:crossbeam-channel",
    "dep:crossbeam-utils",
    "dep:crossbeam-queue",
    "dep:httparse",
    "dep:compact_str",
    "dep:arc-swap",
    "dep:md-5",
    "dep:glob",
    "dep:xdg",
    "dep:shared_vector",
    "dep:icu_casemap",
    "dep:polling",
    "dep:which",
    "dep:getrandom",
    "getrandom/std",
    "log/std",
    "serde/rc",
    "once_cell/std",
    "lasso/multi-threaded",
    "lasso/serialize",
    "lasso/inline-more",
    "num-traits/std",
    "num-integer/std",
    "num-bigint/std",
    "num-rational/std",
]
no_std = [
    "dep:getrandom",
    "dep:steel-parser",
    "steel-parser/no_std",
]
no_std_env = []
no_std_primitives = [
    "no_std",
    "no_std_gc",
    "no_std_rerrs",
    "no_std_rvals",
    "no_std_values",
    "no_std_compiler",
    "no_std_steel_vm",
]
no_std_rerrs = []
no_std_rvals = ["no_std"]
no_std_stdlib = ["no_std"]
no_std_gc = ["no_std"]
no_std_containers = []
no_std_conversions = []
no_std_steel_vm = ["no_std", "no_std_rvals"]
no_std_values = ["no_std", "no_std_rvals"]
no_std_compiler = ["no_std", "no_std_rvals"]
modules = []
jit = ["dep:cranelift", "dep:cranelift-module", "dep:cranelift-jit"]
sandbox = []
dynamic = []
profiling = []
unsafe-internals = []
anyhow = ["dep:anyhow"]
dylibs = ["dep:abi_stable", "dep:async-ffi"]
markdown = ["dep:termimad"]
smallvec = []
without-drop-protection = []
stacker = ["dep:stacker"]
dylib-build = ["dep:cargo-steel-lib"]
sync = [
    "dep:im",
    "dep:parking_lot",
    "dep:crossbeam-channel",
    "dep:crossbeam-utils",
    "dep:crossbeam-queue",
    "dep:shared_vector",
]
interrupt = []
rooted-instructions = []
recycle = []
# git = ["dep:gix", "anyhow"]
git = ["dep:git2", "anyhow"]
ureq = ["dep:ureq"]
disable-arity-checking = ["steel-derive/disable-arity-checking"]
experimental-drop-handler = []
unsandboxed-kernel = []
inline-captures = []
experimental = []
triomphe = ["dep:triomphe"]
op-code-profiling = []
imbl = ["dep:imbl"]

no_std_tests = ["no_std"]

ffi-format = []

[[bench]]
name = "my_benchmark"
harness = false

[[test]]
name = "no_std_suite"
path = "tests/no_std_suite.rs"
harness = false
